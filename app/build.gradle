/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id "org.xbib.gradle.plugin.git" version "2.0.0"
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'GitLab2.App'
}

task reports {
    
    dependsOn test
    dependsOn javadoc

}

task clonePages() {                                             
    doLast {
        mkdir 'build/gh-pages'
        def thisRepo = rootProject.projectDir.toString()
        def pagesDir = "$buildDir/gh-pages"
        project.delete {
            delete pagesDir
        }
        def grgit = git.clone {
            dir = pagesDir
            uri = 'file:' + thisRepo
            bare = false
            refToCheckout = 'gh-pages'
        }
        grgit.checkout {
            branch = 'gh-pages'
        }
    }
}

task copyReports (type: Copy, dependsOn: ['clonePages']) {  
    from "$buildDir/docs"
    into "$buildDir/gh-pages/docs"
    
    from "$buildDir/reports"
    into "$buildDir/gh-pages/reports"
}

task deployReports (dependsOn: 'copyReports') {                     
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    doLast {
        def pagesDir1 = "$buildDir/gh-pages/docs"
        def grgit1 = git.open {
            dir = pagesDir1 + "/.git"
        }
        
        def pagesDir2 = "$buildDir/gh-pages/reports"
        def grgit2 = git.open {
            dir = pagesDir2 + "/.git"
        }
        
        grgit1.add (update: false, patterns: ['docs/'])
        grgit1.add (update: true, patterns: ['docs/'])
        grgit2.add (update: false, patterns: ['reports/'])
        grgit2.add (update: true, patterns: ['reports/'])
       // grgit.commit {
            //message = "Updating web pages"
        //}
        //grgit.push {}
    }
}